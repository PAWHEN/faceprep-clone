{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\faceprep-clone\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { topics } from \"../data/topics\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport TopicCard from \"../components/TopicCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const [progress, setProgress] = useState({});\n  useEffect(() => {\n    const storedProgress = JSON.parse(localStorage.getItem(\"progress\")) || {};\n    setProgress(storedProgress);\n  }, []);\n  const toggleComplete = id => {\n    const updated = {\n      ...progress,\n      [id]: !progress[id]\n    };\n    setProgress(updated);\n    localStorage.setItem(\"progress\", JSON.stringify(updated));\n  };\n  const completedCount = Object.values(progress).filter(Boolean).length;\n  const percentage = Math.round(completedCount / topics.length * 100);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-gray-50 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-2\",\n      children: [\"Welcome, \", localStorage.getItem(\"name\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      percentage: percentage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mt-4\",\n      children: topics.map(topic => /*#__PURE__*/_jsxDEV(TopicCard, {\n        topic: topic,\n        completed: progress[topic.id],\n        onToggle: () => toggleComplete(topic.id)\n      }, topic.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"1GWlvcYPVqypIG6wDbF2Qi05EuU=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useState","topics","ProgressBar","TopicCard","jsxDEV","_jsxDEV","Dashboard","_s","progress","setProgress","storedProgress","JSON","parse","localStorage","getItem","toggleComplete","id","updated","setItem","stringify","completedCount","Object","values","filter","Boolean","length","percentage","Math","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","topic","completed","onToggle","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/faceprep-clone/src/pages/Dashboard.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { topics } from \"../data/topics\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport TopicCard from \"../components/TopicCard\";\n\nexport default function Dashboard() {\n  const [progress, setProgress] = useState({});\n\n  useEffect(() => {\n    const storedProgress = JSON.parse(localStorage.getItem(\"progress\")) || {};\n    setProgress(storedProgress);\n  }, []);\n\n  const toggleComplete = (id) => {\n    const updated = { ...progress, [id]: !progress[id] };\n    setProgress(updated);\n    localStorage.setItem(\"progress\", JSON.stringify(updated));\n  };\n\n  const completedCount = Object.values(progress).filter(Boolean).length;\n  const percentage = Math.round((completedCount / topics.length) * 100);\n\n  return (\n    <div className=\"p-4 bg-gray-50 min-h-screen\">\n      <h2 className=\"text-xl font-bold mb-2\">\n        Welcome, {localStorage.getItem(\"name\")}\n      </h2>\n      <ProgressBar percentage={percentage} />\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mt-4\">\n        {topics.map((topic) => (\n          <TopicCard\n            key={topic.id}\n            topic={topic}\n            completed={progress[topic.id]}\n            onToggle={() => toggleComplete(topic.id)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,gBAAgB;AACvC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMW,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC;IACzEL,WAAW,CAACC,cAAc,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,cAAc,GAAIC,EAAE,IAAK;IAC7B,MAAMC,OAAO,GAAG;MAAE,GAAGT,QAAQ;MAAE,CAACQ,EAAE,GAAG,CAACR,QAAQ,CAACQ,EAAE;IAAE,CAAC;IACpDP,WAAW,CAACQ,OAAO,CAAC;IACpBJ,YAAY,CAACK,OAAO,CAAC,UAAU,EAAEP,IAAI,CAACQ,SAAS,CAACF,OAAO,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMG,cAAc,GAAGC,MAAM,CAACC,MAAM,CAACd,QAAQ,CAAC,CAACe,MAAM,CAACC,OAAO,CAAC,CAACC,MAAM;EACrE,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAAER,cAAc,GAAGnB,MAAM,CAACwB,MAAM,GAAI,GAAG,CAAC;EAErE,oBACEpB,OAAA;IAAKwB,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAC1CzB,OAAA;MAAIwB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,GAAC,WAC5B,EAACjB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACL7B,OAAA,CAACH,WAAW;MAACwB,UAAU,EAAEA;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvC7B,OAAA;MAAKwB,SAAS,EAAC,2DAA2D;MAAAC,QAAA,EACvE7B,MAAM,CAACkC,GAAG,CAAEC,KAAK,iBAChB/B,OAAA,CAACF,SAAS;QAERiC,KAAK,EAAEA,KAAM;QACbC,SAAS,EAAE7B,QAAQ,CAAC4B,KAAK,CAACpB,EAAE,CAAE;QAC9BsB,QAAQ,EAAEA,CAAA,KAAMvB,cAAc,CAACqB,KAAK,CAACpB,EAAE;MAAE,GAHpCoB,KAAK,CAACpB,EAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAId,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC3B,EAAA,CAnCuBD,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}